
from DBWrapper import DBWrapper

def create_tables(cursor):
	
	cursor.execute(
		'''
			CREATE SCHEMA IF NOT EXISTS vsapp AUTHORIZATION postgres;
			set search_path = vsapp;
		'''
	)

	cursor.execute(
		'''

			DROP TABLE IF EXISTS vsapp."Users";

			CREATE TABLE IF NOT EXISTS vsapp."Users"
			(
				"Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
				"Username" character varying COLLATE pg_catalog."default" NOT NULL,
				"Password" character varying COLLATE pg_catalog."default" NOT NULL,
				"Email" character varying COLLATE pg_catalog."default" NOT NULL,
				"Role" smallint NOT NULL DEFAULT 0,
				CONSTRAINT "PK_Users" PRIMARY KEY ("Id")
			)

			TABLESPACE pg_default;

			ALTER TABLE IF EXISTS vsapp."Users"
				OWNER to postgres;
		'''

	)

	cursor.execure(
		'''
			DROP TABLE IF EXISTS vsapp."Tags";

			CREATE TABLE IF NOT EXISTS vsapp."Tags"
			(
				"Id" integer NOT NULL,
				"Value" character varying COLLATE pg_catalog."default" NOT NULL,
				CONSTRAINT "Tags_pkey" PRIMARY KEY ("Id")
			)

			TABLESPACE pg_default;

			ALTER TABLE IF EXISTS vsapp."Tags"
				OWNER to postgres;
		'''
	)

	cursor.execute('''
		DROP TABLE IF EXISTS vsapp."Thumbnails";

		CREATE TABLE IF NOT EXISTS vsapp."Thumbnails"
		(
			"Id" integer NOT NULL,
			"ThumbnailAddress" character varying COLLATE pg_catalog."default" NOT NULL,
			"ThumbnailUrl" character varying COLLATE pg_catalog."default" NOT NULL,
			CONSTRAINT "Thumbnails_pkey" PRIMARY KEY ("Id")
		)

		TABLESPACE pg_default;

		ALTER TABLE IF EXISTS vsapp."Thumbnails"
			OWNER to postgres;
	''')

	cursor.execute(
		'''
			DROP TABLE IF EXISTS vsapp."Videos";

			CREATE TABLE IF NOT EXISTS vsapp."Videos"
			(
				"Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
				"VideoAddress" character varying COLLATE pg_catalog."default" NOT NULL,
				"IdUser" integer NOT NULL,
				"Duration" integer NOT NULL,
				"Height" integer NOT NULL,
				"Width" integer NOT NULL,
				"URL" character varying COLLATE pg_catalog."default",
				"IdThumbnail" integer,
				CONSTRAINT "Assets_pkey" PRIMARY KEY ("Id"),
				CONSTRAINT "FK_Thumbnail" FOREIGN KEY ("IdThumbnail")
					REFERENCES vsapp."Thumbnails" ("Id") MATCH SIMPLE
					ON UPDATE NO ACTION
					ON DELETE CASCADE
					NOT VALID,
				CONSTRAINT "Videos_IdUser_fkey" FOREIGN KEY ("IdUser")
					REFERENCES vsapp."Users" ("Id") MATCH SIMPLE
					ON UPDATE NO ACTION
					ON DELETE NO ACTION
					NOT VALID
			)

			TABLESPACE pg_default;

			ALTER TABLE IF EXISTS vsapp."Videos"
				OWNER to postgres;
		'''
	)

	cursor.execute(
		'''
			DROP TABLE IF EXISTS vsapp."VideoTagsAssociations";

			CREATE TABLE IF NOT EXISTS vsapp."VideoTagsAssociations"
			(
				"Id" integer NOT NULL,
				"IdVideo" integer NOT NULL,
				"IdTag" integer NOT NULL,
				CONSTRAINT "PK_VTAssociations" PRIMARY KEY ("Id")
					INCLUDE("IdVideo", "IdTag"),
				CONSTRAINT "FK_Tags" FOREIGN KEY ("IdTag")
					REFERENCES vsapp."Tags" ("Id") MATCH SIMPLE
					ON UPDATE NO ACTION
					ON DELETE NO ACTION,
				CONSTRAINT "FK_Videos" FOREIGN KEY ("IdVideo")
					REFERENCES vsapp."Videos" ("Id") MATCH SIMPLE
					ON UPDATE NO ACTION
					ON DELETE NO ACTION
			)

			TABLESPACE pg_default;

			ALTER TABLE IF EXISTS vsapp."VideoTagsAssociations"
				OWNER to postgres;
		'''
	)

	cursor.execute(
		'''
			DROP TABLE IF EXISTS vsapp."Images";

			CREATE TABLE IF NOT EXISTS vsapp."Images"
			(
				"Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
				"ImageAddress" character varying COLLATE pg_catalog."default" NOT NULL,
				"IdUser" integer NOT NULL,
				"Height" integer NOT NULL,
				"Width" integer NOT NULL,
				"URL" character varying COLLATE pg_catalog."default" NOT NULL,
				CONSTRAINT "PK" PRIMARY KEY ("Id"),
				CONSTRAINT "FK_users" FOREIGN KEY ("IdUser")
					REFERENCES vsapp."Users" ("Id") MATCH SIMPLE
					ON UPDATE NO ACTION
					ON DELETE NO ACTION
					NOT VALID
			)

			TABLESPACE pg_default;

			ALTER TABLE IF EXISTS vsapp."Images"
				OWNER to postgres;
		'''
	)

db = DBWrapper()

(conn, cursor) = db.open()

try:
	create_tables(cursor)
finally:
	db.close()


